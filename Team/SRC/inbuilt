/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   inbuilt.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: leng-chu <-chu@student.42kl.edu.my>        +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/03/08 16:53:45 by leng-chu          #+#    #+#             */
/*   Updated: 2022/03/30 19:59:21 by leng-chu         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "minishell.h"

void	ft_echo(int tokens, char **list)
{
	int	i;

	if (ft_strcmp(list[1], "-n") == 0)
		i = 1;
	else
		i = 0;
	if (tokens > 1)
		while (++i < token)
			printf("%s ", list[i]);
	if (ft_strcmp(list[1], "-n") != 0)
		printf("\n");
}

void	ft_pwd(void)
{
	char	pwd[1042];

	if (getcwd(pwd, sizeof(pwd)) == NULL)
		perror("");
	else
		printf("pwd: %s\n", pwd);
}

void	ft_chdir(int tokens, char *s)
{
	if (tokens > 2)
		perror("Error: too many arguments have been passed!\n");
	if (tokens == 1 && !s)
		chdir(getenv("HOME"));
	if (chdir(s) != 0)
		printf("cd: no such file or directory: \n");
}

// environ is tempo variable till a environ variable made by Yee Jin
int	ft_unset(char *s)
{
	char 	**ep;
	char	**sp;
	size_t	len;

	len = ft_strlen(s);
	ep = environ;
	while (*ep != NULL)
	{
		if (ft_strncmp(*ep, name, len) == 0 && (*ep)[len] == '=')
		{
			sp = ep;
			while (*sp != NULL)
				*sp++ = *(sp + 1);
		}
		else
			ep++;
	}
	return (0);
}

int	ft_strchr(char *s, char c)
{
	while (*s)
		if (*s++ == c)
			return (1);
	return (0);
}

void ft_export(char **input)
{
	char **name;
	char **split;

	if (input[1][0] == '=')
		perror("command not found\n");
	if (input[1] && ft_strchr(input[1], '='))
	{
		split = ft_split(input[1], '=');
		name = split[0];
		ft_unset(name);
		// environ is tempo variable
		environ = ft_strdup(input[1]);
		free(split);
	}
}

// environ is tempo variable
void	ft_env(char **environ)
{
	char	*tmp;

	tmp = NULL;
	while (*environ)
	{
		tmp = *environ++;
		printf("%s\n", tmp);
	}
}

void	ft_exit(char **input)
{
	if (ft_strcmp(input[0], "exit") == 0)
		exit(0);
}
